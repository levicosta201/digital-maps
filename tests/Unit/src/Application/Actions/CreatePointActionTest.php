<?php
namespace Tests\Unit\src\Application\Actions;

use App\src\Application\Actions\CreatePointAction;
use App\src\Application\DTO\PointDto;
use App\src\Domain\Services\PointsService;
use Tests\TestCase;

class CreatePointActionTest extends TestCase
{
    protected PointsService $pointsService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->pointsService = $this->createMock(PointsService::class);
        $this->pointsService
            ->method('create')
            ->willReturn(PointDto::fromArray([
                'uuid' => 'mock-mock-mock-mock',
                'name' => 'Test',
                'latitude' => 30,
                'longitude' => 50,
                'open_hour' => '08:15',
                'close_hour' => '18:00',
            ]));
    }

    public function testExecuteSuccess()
    {
        $pointDto = PointDto::fromArray([
            'uuid' => 'mock-mock-mock-mock',
            'name' => 'Test',
            'latitude' => 30,
            'longitude' => 50,
            'open_hour' => '08:15',
            'close_hour' => '18:00',
        ]);

        $createPointAction = new CreatePointAction($this->pointsService);
        $result = $createPointAction->execute($pointDto);

        $this->assertEquals('Test', $result->name);
        $this->assertEquals(30, $result->latitude);
        $this->assertEquals(50, $result->longitude);
        $this->assertEquals('08:15', $result->openHour);
        $this->assertEquals('18:00', $result->closeHour);
    }
}
