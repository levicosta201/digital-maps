<?php
namespace Tests\Unit\src\Application\Actions;

use App\src\Application\Actions\ListNearPointsAction;
use App\src\Application\Actions\ListPointsAction;
use App\src\Application\DTO\PointDto;
use App\src\Domain\Services\PointsService;
use Tests\TestCase;

class ListNearActionTest extends TestCase
{
    protected PointsService $pointsService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->pointsService = $this->createMock(PointsService::class);
        $this->pointsService
            ->method('getNear')
            ->willReturn([
                PointDto::fromArray([
                    'uuid' => 'mock-mock-mock-mock',
                    'name' => 'Test',
                    'latitude' => 30,
                    'longitude' => 50,
                    'open_hour' => '08:15',
                    'close_hour' => '18:00',
                ]),
                PointDto::fromArray([
                    'uuid' => 'mock-mock-mock-mock',
                    'name' => 'Test',
                    'latitude' => 30,
                    'longitude' => 50,
                    'open_hour' => null,
                    'close_hour' => null,
                ])
            ]);
    }

    public function testExecuteSuccess()
    {
        $listPointsAction = new ListNearPointsAction($this->pointsService);
        $result = $listPointsAction->execute(
            '30',
            '50',
            '100',
            '08:00'
        );

        $this->assertIsArray($result);
    }
}
